#Problem 3

class Node:
    def __init__(self, value):
        self.value = value
        self.next = None
        
class LinkedList:
    def __init__(self):
        self.head = None
        
    def addNode(self, value):
        newNode = Node(value)
        if self.head is None:
            self.head = newNode
        else:
            current = self.head
            while current.next is not None:
                current = current.next
            current.next = newNode
            
    def removeNodes(self, x):
        if self.head is None:
            return
        
        while self.head is not None and self.head.value > x:
            self.head = self.head.next
            
        if self.head is None:
            return
        
        current = self.head
        while current.next is not None:
            if current.next.value > x:
                current.next = current.next.next
            else:
                current = current.next

def removeNodesGreaterThanX(head, x):
    List = LinkedList()
    List.head = head
    List.removeNodes(x)
    return List.head

List = LinkedList()
List.addNode(10)
List.addNode(5)
List.addNode(12)
List.addNode(7)
List.addNode(3)
List.addNode(9)
List.addNode(10)

x = removeNodesGreaterThanX(List.head, 7)

current = x
while current is not None:
    print(current.value)
    current = current.next
